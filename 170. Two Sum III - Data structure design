/**
 * Initialize your data structure here.
 */
var TwoSum = function() {
    this.nums = new Map();
};

/**
 * Add the number to an internal data structure.. 
 * @param {number} number
 * @return {void}
 */
TwoSum.prototype.add = function(number) {
    if (!this.nums.has(number)) this.nums.set(number, 0);
    this.nums.set(number, this.nums.get(number) + 1);
};

/**
 * Find if there exists any pair of numbers which sum is equal to the value. 
 * @param {number} value
 * @return {boolean}
 */
TwoSum.prototype.find = function(value) {
    for (const [num, count] of this.nums) {
        const diff = value - num;
        
        if (!this.nums.has(diff)) continue;
        
        let count = this.nums.get(diff);
        if (diff == num) count--;
        
        if (count > 0) return true;
    }
    
    return false;
};

/** 
 * Your TwoSum object will be instantiated and called as such:
 * var obj = new TwoSum()
 * obj.add(number)
 * var param_2 = obj.find(value)
 */
