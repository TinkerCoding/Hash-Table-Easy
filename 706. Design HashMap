
 };

 /**
  * @param {number} key
  * @return {number}
  */

MyHashMap.prototype.get = function(key) {
    let hashValue = key%this.nodeLength
    if(this.nodes[hashValue] == undefined) {
        return -1
    }
    for(let i=0;i<this.nodes[hashValue].length;i++){
        if(this.nodes[hashValue][i][0] == key) {
            return this.nodes[hashValue][i][1]
        }
    }
    return -1
};

/**
 * @param {number} key
 * @return {void}
 */
MyHashMap.prototype.remove = function(key) {
    let hashValue = key%this.nodeLength
    if(this.nodes[hashValue] == undefined) {
        return
    }
    for(let i=0;i<this.nodes[hashValue].length;i++) {
        if(this.nodes[hashValue][i][0] == key) {
            this.nodes[hashValue][i] = [-1,-1]
            return
        }
    }
};

/**
 * Your MyHashMap object will be instantiated and called as such:
 * var obj = new MyHashMap()
 * obj.put(key, value)
 * var param_2 = obj.get(key)
 * obj.remove(key)
 */
